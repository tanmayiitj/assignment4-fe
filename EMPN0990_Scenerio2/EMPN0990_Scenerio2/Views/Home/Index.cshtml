@{
    ViewData["Title"] = "Home Page";
    var employees = ViewData.Model;
}
<!-- Include Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<div class="container mt-5">
    <h2 class="text-center mb-4 text-primary" style="font-family: Arial, sans-serif;">Employee Records</h2>

    <div class="text-center mb-4">
        <div class="input-group mb-3" style="max-width: 600px; margin: 0 auto;">
            <input type="text" id="search" class="form-control" placeholder="Enter Employee Id..">
            <button type="button" class="btn btn-primary" id="searchButton">
                Search
            </button>
        </div>

        <div class="card p-4" style="max-width: 600px; margin: 0 auto;">
            <div class="mb-3">
                <label for="employeeName" class="form-label font-weight-bold">Employee Name:</label>
                <input type="text" id="employeeName" class="form-control" placeholder="Employee Name">
            </div>
            <div class="mb-3">
                <label for="employeeAge" class="form-label font-weight-bold">Employee Age:</label>
                <input type="text" id="employeeAge" class="form-control" placeholder="Employee Age">
            </div>
            <div class="mb-3">
                <label for="employeeSalary" class="form-label font-weight-bold">Employee Salary:</label>
                <input type="text" id="employeeSalary" class="form-control" placeholder="Employee Salary">
            </div>
            <div class="mb-3">
                <label for="employeeId" class="form-label font-weight-bold">Employee Id:</label>
                <input type="text" id="employeeId" class="form-control" placeholder="Employee Id (Optional)">
            </div>
            <div class="d-flex justify-content-between">
                <button type="button" class="btn btn-success" id="createEmployeeButton">
                    Create Employee
                </button>
                <button type="button" class="btn btn-warning text-white" id="updateEmployeeButton" disabled>
                    Update Employee
                </button>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-bordered text-center">
            <thead class="table-primary">
                <tr>
                    <th>Employee ID</th>
                    <th>Employee Name</th>
                    <th>Employee Salary</th>
                    <th>Employee Age</th>
                    <th>Remove</th>
                </tr>
            </thead>
            <tbody id="tableBodyBro">
                @foreach (var employee in employees)
                {
                    <tr>
                        <td>@employee.Id</td>
                        <td>@employee.Employee_name</td>
                        <td>@employee.Employee_salary</td>
                        <td>@employee.Employee_age</td>
                        <td>
                            <button class="btn btn-danger deleteButton" data-id="@employee.Id"
                                onclick="deleteRow(@employee.Id)">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Include Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    var originalTableRows = $("#tableBodyBro").html();
    var deletedIds = [];

    $(document).ready(function () {
        // Search button functionality
        $("#searchButton").click(function () {
            var inputValue = $("#search").val();

            $.ajax({
                url: `/Home/GetEmployee/${inputValue}`,
                type: "GET",
                data: { inputValue: inputValue },
                success: function (result) {
                    var table = $("table");
                    table.find("tr:gt(0)").remove(); // Clear all rows except the header
                    if (result != "Employee not found") {
                        table.append(`<tr>
                                        <td>${result.id}</td>
                                        <td>${result.employee_name}</td>
                                        <td>${result.employee_salary}</td>
                                        <td>${result.employee_age}</td>
                                        <td>
                                            <button class="btn btn-danger deleteButton" data-id="${result.id}" onclick="deleteRow(${result.id})">
                                                Delete
                                            </button>
                                        </td>
                                    </tr>`);
                    } else {
                        alert("No Records Found");
                        $("#search").val("");
                        restoreTable(); // Restore the table when no records are found
                    }
                },
            });
        });

        // Restore table when input is cleared
        $("#search").on("input", function () {
            var inputValue = $(this).val();
            if (inputValue === "") {
                restoreTable(); // Restore the table rows
            }
        });

        // Delete row function
        window.deleteRow = function (id) {
            $.ajax({
                url: `/Home/DeleteEmployee/${id}`,
                type: "DELETE",
                data: { id: id },
                success: function (result) {
                    if (result === "Employee deleted") {
                        deletedIds.push(id); // Add the deleted ID to the array
                        $("#tableBodyBro").find("[data-id='" + id + "']").closest("tr").remove();
                        alert("Employee deleted");
                    } else {
                        alert("Error deleting employee");
                    }
                }
            });
        };

        // Function to restore the table
        function restoreTable() {
            var restoredRows = $(originalTableRows).filter(function () {
                var id = $(this).find("td:first").text().trim();
                return !deletedIds.includes(parseInt(id));
            });
            $("#tableBodyBro").html(restoredRows);
        }

        // Create Employee
        $("#createEmployeeButton").click(function () {
            var employeeName = $("#employeeName").val();
            var employeeAge = $("#employeeAge").val();
            var employeeSalary = $("#employeeSalary").val();
            var employeeId = Math.floor(Math.random() * 500) + 1;

            $.ajax({
                url: `/Home/AddEmployee`,
                type: "POST",
                data: {
                    Employee_name: employeeName,
                    Employee_age: employeeAge,
                    Employee_salary: employeeSalary,
                    id: employeeId
                },
                success: function (result) {
                    if (result != "Employee not added") {
                        var newRow = `<tr data-id="${result.id}">
                                        <td>${result.id}</td>
                                        <td>${result.employee_name}</td>
                                        <td>${result.employee_salary}</td>
                                        <td>${result.employee_age}</td>
                                        <td>
                                            <button class="btn btn-danger deleteButton" data-id="${result.id}" onclick="deleteRow(${result.id})">
                                                Delete
                                            </button>
                                        </td>
                                    </tr>`;
                        $("#tableBodyBro").append(newRow);
                        originalTableRows += newRow; // Update originalTableRows after addition

                        // Clear the input fields after adding the employee
                        $("#employeeName").val("");
                        $("#employeeAge").val("");
                        $("#employeeSalary").val("");
                    } else {
                        alert("Employee can't be added");
                    }
                },
            });
        });

        // Update Employee
        $("#updateEmployeeButton").click(function () {
            var employeeName = $("#employeeName").val();
            var employeeAge = $("#employeeAge").val();
            var employeeSalary = $("#employeeSalary").val();
            var employeeId = $("#employeeId").val();

            // Validation: Check if any field is empty
            if (!employeeName || !employeeAge || !employeeSalary) {
                alert("Please provide valid values for all fields before updating.");
                return;
            }

            var employeeExists = $("#tableBodyBro").find("[data-id='" + employeeId + "']").length > 0;

            if (!employeeExists) {
                alert("Employee not present");
                return;
            }

            $.ajax({
                url: `/Home/UpdateEmployee`,
                type: "PUT",
                data: {
                    Employee_name: employeeName,
                    Employee_age: employeeAge,
                    Employee_salary: employeeSalary,
                    id: employeeId
                },
                success: function (result) {
                    if (result != "Employee not updated") {
                        var updatedRow = `<tr data-id="${employeeId}">
                                            <td>${employeeId}</td>
                                            <td>${result.employee_name}</td>
                                            <td>${result.employee_salary}</td>
                                            <td>${result.employee_age}</td>
                                            <td>
                                                <button class="btn btn-danger deleteButton" data-id="${employeeId}" onclick="deleteRow(${employeeId})">
                                                    Delete
                                                </button>
                                            </td>
                                        </tr>`;

                        // Remove the old row and add the updated row
                        $("#tableBodyBro").find("[data-id='" + employeeId + "']").closest("tr").remove();
                        $("#tableBodyBro").append(updatedRow);

                        // Update originalTableRows to reflect the update
                        originalTableRows = originalTableRows.replace(
                            new RegExp(`<tr[^>]*data-id="${employeeId}"[^>]*>.*?</tr>`, "gs"),
                            updatedRow
                        );

                        // Clear inputs and toggle buttons
                        $("#employeeName").val("");
                        $("#employeeAge").val("");
                        $("#employeeSalary").val("");
                        $("#employeeId").val("");
                        $("#createEmployeeButton").removeAttr("disabled");
                        $("#updateEmployeeButton").attr("disabled", "disabled");
                    } else {
                        alert("Employee can't be updated");
                    }
                },
            });
        });

        // Toggle Create and Update buttons based on Employee ID input
        $("#employeeId").keyup(function () {
            var employeeId = $(this).val();
            if (employeeId) {
                $("#createEmployeeButton").attr("disabled", "disabled");
                $("#updateEmployeeButton").removeAttr("disabled");
            } else {
                $("#createEmployeeButton").removeAttr("disabled");
                $("#updateEmployeeButton").attr("disabled", "disabled");
            }
        });
    });
</script>

